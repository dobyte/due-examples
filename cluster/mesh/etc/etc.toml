# 进程号
pid = "./run/mesh.pid"
# 统一时区设置。项目中的时间获取请使用xtime.Now()
timezone = "Local"


[log]
    # 日志输出文件
    file = "./log/due.log"
    # 日志输出级别，可选：debug | info | warn | error | fatal | panic
    level = "info"
    # 日志输出格式，可选：text | json
    format = "text"
    # 是否输出到终端
    stdout = true
    # 时间格式，标准库时间格式
    timeFormat = "2006/01/02 15:04:05.000000"
    # 堆栈的最低输出级别，可选：debug | info | warn | error | fatal | panic
    stackLevel = "error"
    # 文件最大留存时间，d:天、h:时、m:分、s:秒
    fileMaxAge = "7d"
    # 文件最大尺寸限制，单位（MB）
    fileMaxSize = 100
    # 文件切割方式
    fileCutRule = "day"
    # 是否启用调用文件全路径
    callerFullPath = true
    # 是否启用分级存储
    classifiedStorage = true


# 任务池
[task]
    # 任务池大小(goroutine)
    size = 100000
    # 是否非阻塞
    nonblocking = true
    # 是否禁用清除。
    disablePurge = true


# 框架默认打包器统一采用以下的打包格式，自定义打包器可自行定义打包规则
# 心跳包
# ------------------------------------------------------------------------------
# | size(4 byte) = (1 byte + 8 byte) | header(1 byte) | heartbeat time(8 byte) |
# ------------------------------------------------------------------------------
#
#  0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7
# +---------------------------------------------------------------+-+-------------+---------------------------------------------------------------+
# |                              size                             |h|   extcode   |                      heartbeat time (ns)                      |
# +---------------------------------------------------------------+-+-------------+---------------------------------------------------------------+

# 数据包
# -----------------------------------------------------------------------------------------------------------------------
# | size(4 byte) = (1 byte + n byte + m byte + x byte) | header(1 byte) | route(n byte) | seq(m byte) | message(x byte) |
# -----------------------------------------------------------------------------------------------------------------------
#
#  0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7 0 1 2 3 4 5 6 7
# +---------------------------------------------------------------+-+-------------+-------------------------------+-------------------------------+
# |                              size                             |h|   extcode   |             route             |              seq              |
# +---------------------------------------------------------------+-+-------------+-------------------------------+-------------------------------+
# |                                                                message data ...                                                               |
# +-----------------------------------------------------------------------------------------------------------------------------------------------+

[packet]
    # 字节序，默认为big。可选：little | big
    byteOrder = "big"
    # 路由字节数，默认为2字节
    routeBytes = 4
    # 序列号字节数，默认为2字节
    seqBytes = 0
    # 消息字节数，默认为5000字节
    bufferBytes = 5000


[cluster.mesh]
	# 实例ID，网关集群中唯一。不填写默认自动生成唯一的实例ID
	id = ""
	# 实例名称
	name = "mesh"
	# 编解码器。可选：json | proto。默认json
	codec = "proto"
	# RPC调用超时时间，支持单位：纳秒（ns）、微秒（us | µs）、毫秒（ms）、秒（s）、分（m）、小时（h）、天（d）。默认为3s
	timeout = "3s"


[locate.redis]
	# 客户端连接地址
	addrs = ["127.0.0.1:6379"]
	# 数据库号
	db = 0
	# 用户名
	username = ""
	# 密码
	password = ""
	# 最大重试次数
	maxRetries = 3
	# key前缀
	prefix = "due"


[registry.consul]
	# 客户端连接地址，默认为127.0.0.1:8500
	addr = "127.0.0.1:8500"
	# 是否启用健康检查，默认为true
	healthCheck = true
	# 健康检查时间间隔（秒），仅在启用健康检查后生效，默认为10
	healthCheckInterval = 10
	# 健康检查超时时间（秒），仅在启用健康检查后生效，默认为5
	healthCheckTimeout = 5
	# 是否启用心跳检查，默认为true
	heartbeatCheck = true
	# 心跳检查时间间隔（秒），仅在启用心跳检查后生效，默认为10
	heartbeatCheckInterval = 10
	# 健康检测失败后自动注销服务时间（秒），默认为30
	deregisterCriticalServiceAfter = 30


[transport.rpcx.server]
	# 服务器监听地址，空或:0时系统将会随机端口号
	addr = ":0"
	# 秘钥文件
	keyFile = ""
	# 证书文件
	certFile = ""


[transport.rpcx.client]
	# 证书文件
	certFile = ""
	# 证书域名
	serverName = ""
	# 连接池大小，默认为10
	poolSize = 10
